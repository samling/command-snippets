# TplKit Configuration File
# Advanced command template toolkit with intelligent variable substitution

# Transform templates - reusable transformation rules
transform_templates:
  # Kubernetes namespace transformation
  k8s-namespace:
    description: "Kubernetes namespace: empty=none, 'all'=-A, name=-n <name>"
    transform:
      empty_value: ""
      value_pattern: |
        {{- if eq .Value "all" -}}
          -A
        {{- else -}}
          -n {{.Value}}
        {{- end -}}

  # Docker container transformation  
  docker-port:
    description: "Docker port mapping (hostport:targetport)"
    transform:
      empty_value: ""
      value_pattern: "-p {{.Value}}:{{.Value}}"

  # Boolean flag transformation
  follow-logs:
    description: "Follow logs flag"
    transform:
      true_value: "-f"
      false_value: ""

# Variable type definitions - reusable variable configurations
variable_types:
  port:
    description: "Network port"
    validation:
      range: [1, 65535]
    default: "8080"

  log_level:
    description: "Application log level" 
    validation:
      enum: ["debug", "info", "warn", "error"]
    default: "info"

  environment:
    description: "Deployment environment"
    validation:
      enum: ["dev", "staging", "prod"]

  namespace:
    description: "Kubernetes namespace"
    default: ""

# Command templates - all variables explicitly defined
snippets:
  # Kubernetes commands
  kubectl-get-pods:
    id: "kubectl-get-pods"
    name: "kubectl-get-pods"
    description: "Get Kubernetes pods with namespace selection"
    command: "kubectl get pods <namespace>"
    variables:
      - name: "namespace"
        description: "Kubernetes namespace (empty=none, 'all'=all namespaces, or specific name)"
        type: "namespace"
        transformTemplate: "k8s-namespace"
    tags: ["kubernetes", "pods"]
    created_at: "2025-01-01T00:00:00Z"
    updated_at: "2025-01-01T00:00:00Z"

  kubectl-logs:
    id: "kubectl-logs"
    name: "kubectl-logs"
    description: "Get logs from a pod in a namespace"  
    command: "kubectl logs <pod_name> <namespace> <follow>"
    variables:
      - name: "pod_name"
        description: "Pod name"
        required: true
      - name: "namespace"
        description: "Kubernetes namespace (empty=none, 'all'=all namespaces, or specific name)"
        type: "namespace"
        transformTemplate: "k8s-namespace"
      - name: "follow"
        description: "Follow logs"
        type: "boolean"
        transform:
          true_value: "-f"
          false_value: ""
    tags: ["kubernetes", "logs"]
    created_at: "2025-01-01T00:00:00Z"
    updated_at: "2025-01-01T00:00:00Z"

  kubectl-port-forward:
    id: "kubectl-port-forward"
    name: "kubectl-port-forward"
    description: "Forward local port to pod or service"
    command: "kubectl port-forward <resource> <port_mapping> <namespace>"
    variables:
      - name: "resource_type"
        required: true
        description: "Resource type: [pod, svc]"
        default: "svc"
        validation:
          enum: ["pod", "svc"]
      - name: "resource_name"
        required: true
        description: "Resource name (e.g., my-pod, my-service)"
      - name: "resource"
        description: "Resource to forward to (e.g., pod/my-pod, service/my-service)"
        computed: true
        transform:
          compose: "{{.resource_type}}/{{.resource_name}}"
      - name: "host_port"
        description: "Host port (e.g., 8080)"
        required: true
        type: "port"
      - name: "target_port"
        description: "Target port (leave empty to use host port)"
        default: ""
        type: "port"
      - name: "port_mapping"
        description: "Complete port mapping"
        computed: true
        transform:
          compose: |
            {{- .host_port -}}:
            {{- if .target_port -}}
              {{- .target_port -}}
            {{- else -}}
              {{- .host_port -}}
            {{- end -}}
      - name: "namespace"
        description: "Kubernetes namespace (empty=none, 'all'=all namespaces, or specific name)"
        type: "namespace"
        transformTemplate: "k8s-namespace"
    tags: ["kubernetes", "port-forward", "networking"]
    created_at: "2025-01-01T00:00:00Z"
    updated_at: "2025-01-01T00:00:00Z"

  # Docker commands
  docker-run:
    id: "docker-run"
    name: "docker-run"
    description: "Run docker container with optional port mapping"
    command: "docker run <port_mapping> <image_name>"
    variables:
      - name: "port_mapping"
        description: "Port mapping (empty for none)"
        transformTemplate: "docker-port"
      - name: "image_name"
        description: "Docker image name"
        required: true
    tags: ["docker", "run"]
    created_at: "2025-01-01T00:00:00Z"
    updated_at: "2025-01-01T00:00:00Z"

  # Git commands  
  git-checkout:
    id: "git-checkout"
    name: "git-checkout"
    description: "Checkout git branch with optional remote"
    command: "git checkout <branch_ref>"
    variables:
      - name: "branch"
        description: "Branch name"
        required: true
      - name: "remote"
        description: "Remote name"
        default: "origin"
      - name: "branch_ref"
        description: "Full branch reference"
        computed: true
        transform:
          compose: "{{.remote}}/{{.branch}}"
    tags: ["git", "checkout"]
    created_at: "2025-01-01T00:00:00Z"
    updated_at: "2025-01-01T00:00:00Z"

  # Multi-line template example
  docker-run-advanced:
    id: "docker-run-advanced"
    name: "docker-run-advanced"
    description: "Advanced docker run with complex configuration"
    command: "docker run <docker_args> <image_name>"
    variables:
      - name: "image_name"
        description: "Docker image name"
        required: true
      - name: "port"
        description: "Port to expose (1-65535)"
        default: ""
        validation:
          range: [1, 65535]
      - name: "volume"
        description: "Volume to mount"
        default: ""
      - name: "env_var"
        description: "Environment variable (KEY=VALUE)"
        default: ""
        validation:
          pattern: "^[A-Z_][A-Z0-9_]*=.*$"
      - name: "detach"
        description: "Run in detached mode"
        type: "boolean"
        default: "false"
      - name: "docker_args"
        description: "Complete docker arguments"
        computed: true
        transform:
          compose: |
            {{- if eq .detach "true" -}}-d {{end -}}
            {{- if .port -}}-p {{.port}} {{end -}}
            {{- if .volume -}}-v {{.volume}} {{end -}}
            {{- if .env_var -}}-e {{.env_var}} {{end -}}
    tags: ["docker", "advanced"]
    created_at: "2025-01-01T00:00:00Z"
    updated_at: "2025-01-01T00:00:00Z"

  # Complex example with inline transform
  kubectl-get-pods-advanced:
    id: "kubectl-get-pods-advanced"
    name: "kubectl-get-pods-advanced"
    description: "Advanced kubectl get pods with multiple options"
    command: "kubectl get pods <namespace> <output> <selector>"
    variables:
      - name: "namespace"
        description: "Kubernetes namespace (empty=none, 'all'=all namespaces, or specific name)"
        type: "namespace"
        transformTemplate: "k8s-namespace"
      - name: "output"
        description: "Output format"
        validation:
          enum: ["", "wide", "yaml", "json"]
        transform:
          empty_value: ""
          value_pattern: "-o {{.Value}}"
      - name: "selector"
        description: "Label selector"
        transform:
          empty_value: ""
          value_pattern: "--selector {{.Value}}"
    tags: ["kubernetes", "pods", "advanced"]
    created_at: "2025-01-01T00:00:00Z"
    updated_at: "2025-01-01T00:00:00Z"

# Global settings
settings:
  # Where to store templates
  snippet_file: "~/.config/tplkit/snippets.yaml"
  
  # Interactive behavior  
  interactive:
    confirm_before_execute: true
    show_final_command: true
    
  # Selector integration (fzf, etc)
  selector:
    command: "fzf"
    options: "--height 40% --reverse --border"